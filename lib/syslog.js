// Generated by LiveScript 1.2.0
(function(){
  var _, moment, fs, color, ref$, spawn, kill, __q, sh, os, shelljs, cl, ut, winston, dispOk, dispKo, disp, pdisp, pdeb, conf, _module;
  _ = require('underscore');
  _.str = require('underscore.string');
  moment = require('moment');
  fs = require('fs');
  color = require('ansi-color').set;
  ref$ = require('child_process'), spawn = ref$.spawn, kill = ref$.kill;
  __q = require('q');
  sh = require('shelljs');
  os = require('os');
  shelljs = sh;
  cl = require('clark');
  ut = require('utf-8');
  winston = require('winston');
  dispOk = function(){
    return winston.info("Ok");
  };
  dispKo = function(it){
    return winston.error(it.toString());
  };
  disp = winston.info;
  pdisp = console.log;
  pdeb = winston.warn;
  _.mixin(_.str.exports());
  _.str.include('Underscore.string', 'string');
  conf = function(filename){
    return "input {\n  file {\n    type => \"syslog\"\n\n    # Wildcards work here :)\n    path => [ \"" + filename + "\" ]\n  }\n}\n\nfilter {\n  grok {\n    type => \"syslog\"\n    pattern => [ \"<%{POSINT:syslog_pri}>%{SPACE}%{GREEDYDATA:message_remainder}\" ]\n    add_tag => \"got_syslog_pri\"\n    add_field => [ \"syslog_raw_message\", \"%{@message}\" ]\n  }\n  syslog_pri {\n    type => \"syslog\"\n    tags => [ \"got_syslog_pri\" ]\n  }\n  mutate {\n    type => \"syslog\"\n    tags => [ \"got_syslog_pri\" ]\n    replace => [ \"@message\", \"%{message_remainder}\" ]\n  }\n  mutate {\n    type => \"syslog\"\n    tags => [ \"got_syslog_pri\" ]\n    remove => [ \"message_remainder\" ]\n  }\n \n  grok {\n    type => \"syslog\"\n    pattern => [ \"%{SYSLOGTIMESTAMP:syslog_timestamp}%{SPACE}%{GREEDYDATA:message_remainder}\" ]\n    add_tag => \"got_syslog_timestamp\"\n    add_field => [ \"received_at\", \"%{@timestamp}\" ]\n  }\n  mutate {\n    type => \"syslog\"\n    tags => [ \"got_syslog_timestamp\" ]\n    replace => [ \"@message\", \"%{message_remainder}\" ]\n  }\n  mutate {\n    type => \"syslog\"\n    tags => [ \"got_syslog_timestamp\" ]\n    remove => [ \"message_remainder\" ]\n  }\n  date {\n    type => \"syslog\"\n    tags => [ \"got_syslog_timestamp\" ]\n    syslog_timestamp => [ \"MMM  d HH:mm:ss\", \"MMM dd HH:mm:ss\", \"ISO8601\" ]\n  }\n \n  grok {\n    type => \"syslog\"\n    pattern => [ \"%{SYSLOGHOST:syslog_hostname}%{SPACE}%{GREEDYDATA:message_remainder}\" ]\n    add_tag => [ \"got_syslog_host\", \"%{syslog_hostname}\" ]\n    add_field => [ \"logstash_source\", \"%{@source_host}\" ]\n  }\n  mutate {\n    type => \"syslog\"\n    tags => [ \"got_syslog_host\" ]\n    replace => [ \"@source_host\", \"%{syslog_hostname}\" ]\n    replace => [ \"@message\", \"%{message_remainder}\" ]\n  }\n  mutate {\n    type => \"syslog\"\n    tags => [ \"got_syslog_host\" ]\n    remove => [ \"message_remainder\" ]\n  }\n}\n\noutput {\n    elasticsearch { embedded => true }\n}";
  };
  _module = function(){
    var scope, init, runLsSyslog, iface;
    init = function(data){
      return scope = data;
    };
    runLsSyslog = function(filename){
      var tmp, command;
      tmp = setupTemporaryDirectory();
      disp("Created " + tmp + "/log.conf");
      fs.writeFileSync(tmp + "/log.conf", conf(filename));
      command = "java -jar " + __dirname + "/logstash.jar agent -f " + tmp + "/log.conf -- web";
      disp("Preparing Logstash/Elasticsearch at http://localhost:9292");
      return shelljs.exec(command);
    };
    iface = {
      runLsSyslog: runLsSyslog
    };
    return iface;
  };
  module.exports = _module();
}).call(this);
